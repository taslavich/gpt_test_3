version: '3.8'

configs:
  nginx_conf:
    file: './nginx.conf'
  dsp_rules:
    file: '../../dsp_rules.json'
  spp_rules:
    file: '../../spp_rules.json'
  ssl_fullchain:
    file: './ssl-certs/fullchain.pem'
  ssl_privkey:
    file: './ssl-certs/privkey.pem'

volumes:
  redis_data:
  kafka_data:
  nginx_logs:

# В docker-stack.yaml добавить
networks:
  rtb-fast:
    driver: overlay
    driver_opts:
      encrypted: "false"
      com.docker.network.driver.mtu: "1450"

services:
  mock-dsp-1:
    networks:
      - rtb-fast
    image: localhost:5000/rtb/mock-dsp-1:local
    hostname: mock-dsp-1
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - env/mock-dsp-1.env

  mock-dsp-2:
    networks:
      - rtb-fast
    image: localhost:5000/rtb/mock-dsp-2:local
    hostname: mock-dsp-2
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - env/mock-dsp-2.env

  mock-dsp-3:
    networks:
      - rtb-fast
    image: localhost:5000/rtb/mock-dsp-3:local
    hostname: mock-dsp-3
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - env/mock-dsp-3.env

  redis:
    networks:
      - rtb-fast
    image: redis:7-alpine
    hostname: redis
    env_file:
      - env/redis.env
    command: ["sh", "-c", "redis-server --requirepass \"$${REDIS_PASSWORD}\""]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5

  kafka:
    networks:
      - rtb-fast
    image: apache/kafka:3.7.0
    hostname: kafka
    env_file:
      - env/kafka.env
    volumes:
      - kafka_data:/tmp/kraft-combined-logs
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  bid-engine:
    networks:
      - rtb-fast
    image: ${BID_ENGINE_IMAGE:-localhost:5000/rtb/bid-engine:local}
    env_file:
      - env/bid-engine.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    depends_on:
      - redis

  router:
    networks:
      - rtb-fast
    image: ${ROUTER_IMAGE:-localhost:5000/rtb/router:local}
    env_file:
      - env/router.env
    configs:
      - source: dsp_rules
        target: /dsp_rules.json
      - source: spp_rules
        target: /spp_rules.json
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    depends_on:
      - redis

  orchestrator:
    networks:
      - rtb-fast
    image: ${ORCHESTRATOR_IMAGE:-localhost:5000/rtb/orchestrator:local}
    env_file:
      - env/orchestrator.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    depends_on:
      - redis
      - bid-engine
      - router

  spp-adapter:
    networks:
      - rtb-fast
    image: ${SPP_ADAPTER_IMAGE:-localhost:5000/rtb/spp-adapter:local}
    env_file:
      - env/spp-adapter.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    depends_on:
      - redis
      - orchestrator

  kafka-loader:
    networks:
      - rtb-fast
    image: ${KAFKA_LOADER_IMAGE:-localhost:5000/rtb/kafka-loader:local}
    env_file:
      - env/kafka-loader.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    depends_on:
      - redis
      - kafka

  clickhouse-loader:
    networks:
      - rtb-fast
    image: ${CLICKHOUSE_LOADER_IMAGE:-localhost:5000/rtb/clickhouse-loader:local}
    env_file:
      - env/clickhouse-loader.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    depends_on:
      - kafka

  nginx-gateway:
    networks:
      - rtb-fast
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
      - "9092:9092"
      - "6379:6379"
      - "8083:8083"
      - "8084:8084"
      - "8085:8085"
      - "8087:8087"
      - "8088:8088"
    volumes:
      - nginx_logs:/var/log/nginx
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
      - source: ssl_fullchain
        target: /etc/ssl/fullchain.pem
      - source: ssl_privkey
        target: /etc/ssl/privkey.pem
    command: ["nginx", "-g", "daemon off;"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
    depends_on:
      - redis
      - kafka
      - bid-engine
      - orchestrator
      - router
      - spp-adapter
      - kafka-loader
      - clickhouse-loader
