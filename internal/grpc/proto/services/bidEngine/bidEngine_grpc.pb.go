// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: services/bidEngine.proto

package bidEngineGrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	BidEngineService_GetWinnerBid_V2_4_FullMethodName = "/bidEngine.BidEngineService/getWinnerBid_V2_4"
	BidEngineService_GetWinnerBid_V2_5_FullMethodName = "/bidEngine.BidEngineService/getWinnerBid_V2_5"
)

// BidEngineServiceClient is the client API for BidEngineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BidEngineServiceClient interface {
	GetWinnerBid_V2_4(ctx context.Context, in *BidEngineRequest_V2_4, opts ...grpc.CallOption) (*BidEngineResponse_V2_4, error)
	GetWinnerBid_V2_5(ctx context.Context, in *BidEngineRequest_V2_5, opts ...grpc.CallOption) (*BidEngineResponse_V2_5, error)
}

type bidEngineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBidEngineServiceClient(cc grpc.ClientConnInterface) BidEngineServiceClient {
	return &bidEngineServiceClient{cc}
}

func (c *bidEngineServiceClient) GetWinnerBid_V2_4(ctx context.Context, in *BidEngineRequest_V2_4, opts ...grpc.CallOption) (*BidEngineResponse_V2_4, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BidEngineResponse_V2_4)
	err := c.cc.Invoke(ctx, BidEngineService_GetWinnerBid_V2_4_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bidEngineServiceClient) GetWinnerBid_V2_5(ctx context.Context, in *BidEngineRequest_V2_5, opts ...grpc.CallOption) (*BidEngineResponse_V2_5, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BidEngineResponse_V2_5)
	err := c.cc.Invoke(ctx, BidEngineService_GetWinnerBid_V2_5_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BidEngineServiceServer is the server API for BidEngineService service.
// All implementations must embed UnimplementedBidEngineServiceServer
// for forward compatibility.
type BidEngineServiceServer interface {
	GetWinnerBid_V2_4(context.Context, *BidEngineRequest_V2_4) (*BidEngineResponse_V2_4, error)
	GetWinnerBid_V2_5(context.Context, *BidEngineRequest_V2_5) (*BidEngineResponse_V2_5, error)
	mustEmbedUnimplementedBidEngineServiceServer()
}

// UnimplementedBidEngineServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedBidEngineServiceServer struct{}

func (UnimplementedBidEngineServiceServer) GetWinnerBid_V2_4(context.Context, *BidEngineRequest_V2_4) (*BidEngineResponse_V2_4, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWinnerBid_V2_4 not implemented")
}
func (UnimplementedBidEngineServiceServer) GetWinnerBid_V2_5(context.Context, *BidEngineRequest_V2_5) (*BidEngineResponse_V2_5, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWinnerBid_V2_5 not implemented")
}
func (UnimplementedBidEngineServiceServer) mustEmbedUnimplementedBidEngineServiceServer() {}
func (UnimplementedBidEngineServiceServer) testEmbeddedByValue()                          {}

// UnsafeBidEngineServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BidEngineServiceServer will
// result in compilation errors.
type UnsafeBidEngineServiceServer interface {
	mustEmbedUnimplementedBidEngineServiceServer()
}

func RegisterBidEngineServiceServer(s grpc.ServiceRegistrar, srv BidEngineServiceServer) {
	// If the following call pancis, it indicates UnimplementedBidEngineServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&BidEngineService_ServiceDesc, srv)
}

func _BidEngineService_GetWinnerBid_V2_4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BidEngineRequest_V2_4)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BidEngineServiceServer).GetWinnerBid_V2_4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BidEngineService_GetWinnerBid_V2_4_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BidEngineServiceServer).GetWinnerBid_V2_4(ctx, req.(*BidEngineRequest_V2_4))
	}
	return interceptor(ctx, in, info, handler)
}

func _BidEngineService_GetWinnerBid_V2_5_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BidEngineRequest_V2_5)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BidEngineServiceServer).GetWinnerBid_V2_5(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BidEngineService_GetWinnerBid_V2_5_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BidEngineServiceServer).GetWinnerBid_V2_5(ctx, req.(*BidEngineRequest_V2_5))
	}
	return interceptor(ctx, in, info, handler)
}

// BidEngineService_ServiceDesc is the grpc.ServiceDesc for BidEngineService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BidEngineService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bidEngine.BidEngineService",
	HandlerType: (*BidEngineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getWinnerBid_V2_4",
			Handler:    _BidEngineService_GetWinnerBid_V2_4_Handler,
		},
		{
			MethodName: "getWinnerBid_V2_5",
			Handler:    _BidEngineService_GetWinnerBid_V2_5_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/bidEngine.proto",
}
